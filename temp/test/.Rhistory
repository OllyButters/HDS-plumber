source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
print(clinical_data_files_length_3[1])
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
print(clinical_data_files_xml)
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
clinical_data_files_3_xml
temp <- xmlToList(clinical_data_files_3)
library(XML)
temp <- xmlToList(clinical_data_files_3)
source('~/git/sentinel/extract.R')
temp <- xmlToList(clinical_data_files_3_xml)
View(temp)
temp2 <- xmlParse(clinical_data_files_3_xml)
temp2
temp2 <- xmlParse(clinical_data_files_3_xml)
xmlToDataFrame(temp2)
xmlToDataFrame(getNodeSet(temp2, "//Measurements"))
xmlToDataFrame(getNodeSet(temp2, "//Measurements"), c("integer"))
xmlToDataFrame(getNodeSet(temp2, "//Measurements"), c("integer", "character"))
xmlToDataFrame(getNodeSet(temp2, "//Measurements"), c("integer", "integer","integer","integer","character"))
temp1 <- xmlToList(clinical_data_files_3_xml)
temp1
temp1[["Measurements"]]
temp1[["Measurements"]][["Measurement"]][["PulsePressure"]]
temp1[["Measurements"]][["Measurement"]][["PulsePressure"]]
pp <- as.list(temp1[["Measurements"]][["Measurement"]][["PulsePressure"]])
pp
df <- data.frame(
pp=clinical_data_files_3_xml[["number(//Measurements/Measurement/PulsePressure)"]]
)
customerAttribs <- xpathSApply(doc=xml, path="//Measurements/Measurement/PulsePressure",  xmlValue)
customerAttribs <- xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue)
pp <- xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue)
pp
df <- data.frame(
pp=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue)
)
df <- data.frame(
sys=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
pp=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue)
)
df
clinical_data_files_3_xml
temp2
df <- data.frame(
Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
sys=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
pp=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue)
)
df
df <- data.frame(
Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue),
CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
DiaryEventAnnotaion=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotaion",  xmlValue),
Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue),
)
df
df <- data.frame(
#Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue),
CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
DiaryEventAnnotaion=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotaion",  xmlValue),
Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue),
)
df <- data.frame(
#Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
#Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
#Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
#Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
#ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
#ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
#Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
#Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
#MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
#HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
#PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue),
#CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
#DiaryEventAnnotaion=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotaion",  xmlValue),
Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue),
)
df <- data.frame(
#Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
#Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
#Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
#Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
#ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
#ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
#Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
#Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
#MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
#HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue),
#CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
#DiaryEventAnnotaion=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotaion",  xmlValue),
#Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue),
)
pp <- xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue)
pp
df <- data.frame(
#Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
#Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
#Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
#Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
#ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
#ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
#Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
#Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
#MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
#HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
PulsePressure=clinical_data_files_3_xml[["//Measurements/Measurement/PulsePressure"]],
#CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
#DiaryEventAnnotaion=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotaion",  xmlValue),
#Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue),
)
pp <- xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue)
pp
#df <- data.frame(
Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue),
CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
DiaryEventAnnotaion=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotaion",  xmlValue),
Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue),
#df <- data.frame(
Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue),
CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
DiaryEventAnnotaion=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotaion",  xmlValue),
Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue),
#df <- data.frame(
Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue)
Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue)
Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue)
Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue)
Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue)
ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue)
ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue)
Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue)
Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue)
MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue)
HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue)
PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue)
CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue)
DiaryEventAnnotaion=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotaion",  xmlValue)
Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue)
View(DiaryEventAnnotaion)
df <- data.frame(
#Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
#Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
#Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
#Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
#ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
#ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
#Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
#Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
#MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
#HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue),
#CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
#DiaryEventAnnotaion=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotaion",  xmlValue),
#Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue),
)
df <- data.frame(
#Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
#Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
#Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
#Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
#ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
#ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
#Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
#Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
#MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
#HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue)
#CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
#DiaryEventAnnotaion=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotaion",  xmlValue),
#Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue),
)
df
df <- data.frame(
Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue)
CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
#DiaryEventAnnotaion=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotaion",  xmlValue),
Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue),
)
df <- data.frame(
Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue),
CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
#DiaryEventAnnotaion=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotaion",  xmlValue),
Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue)
)
df
temp2
df <- data.frame(
Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue),
CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
DiaryEventAnnotation=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotation",  xmlValue),
Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue)
)
df
df
# Parse the xml file so it can be accessed later
temp2 <- xmlParse(clinical_data_files_4_xml)
df <- data.frame(
Day=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Day",  xmlValue),
Hour=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Hour",  xmlValue),
Minute=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Minute",  xmlValue),
Second=xpathSApply(doc=temp2, path="//Measurements/Measurement/Time/Second",  xmlValue),
ReadingStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ReadingStatus",  xmlValue),
ErrorStatus=xpathSApply(doc=temp2, path="//Measurements/Measurement/ErrorStatus",  xmlValue),
Systolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Systolic",  xmlValue),
Diastolic=xpathSApply(doc=temp2, path="//Measurements/Measurement/Diastolic",  xmlValue),
MeanArterialPressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/MeanArterialPressure",  xmlValue),
HeartRate=xpathSApply(doc=temp2, path="//Measurements/Measurement/HeartRate",  xmlValue),
PulsePressure=xpathSApply(doc=temp2, path="//Measurements/Measurement/PulsePressure",  xmlValue),
CoefficientOfVariability=xpathSApply(doc=temp2, path="//Measurements/Measurement/CoefficientOfVariability",  xmlValue),
DiaryEventAnnotation=xpathSApply(doc=temp2, path="//Measurements/Measurement/DiaryEventAnnotation",  xmlValue),
Excluded=xpathSApply(doc=temp2, path="//Measurements/Measurement/Excluded",  xmlValue)
)
df
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
df
found <- 0
while (found<45) {
temp <- readBin(fhb, character(), 1)
print(length(temp))
found = found + 1
}
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
library(stringr)
library(trim)
install.packages("stringr")
library(stringr)
print(str_trim(this_string))
print(this_string)
print(str_trim(this_string))
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
substr("abcdef", 2, 4)
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
substr("abcdef", 2-1, 4)
substr("abcdef", 3-1, 4)
source('~/git/sentinel/extract.R')
source('~/git/sentinel/extract.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
pwd()
pcd()
cwd()
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
results$metadata_xml
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
library(XML)
input_filename <- "/home/olly/git/sentinel/2011_B_07-01-2021_13-49-41.RSNTL"
source("/home/olly/git/sentinel/parse_binary_file.R")
source("/home/olly/git/sentinel/parse_xml_string.R")
# Parse the raw binary file returning a list with XML strings corresponding to
# each section of the raw file.
results = parse_binary_file(input_filename)
data = parse_xml_string(results)
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
source('~/git/sentinel/main.R')
session()
sessionInfo()
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
data("midwest", package = "ggplot2")
# midwest <- read.csv("http://goo.gl/G1K41K")  # bkup data source
# Scatterplot
gg <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
geom_smooth(method="loess", se=F)
plot(gg)
source("~/git/sentinel/main.R")
ggplot(data = data1, mapping = aes(x = as.numeric(Diastolic), y = as.numeric(Systolic))) +
geom_point()
ggplot(data = data1, mapping = aes(x = time, y = as.numeric(Systolic))) +
geom_point()
ggplot(data = data1, mapping = aes(x = time, y = as.numeric(Systolic))) +
geom_point()
ggplot(data = data1, mapping = aes(x = as.POSIXct(time), y = as.numeric(Systolic))) +
geom_point()
source("~/git/sentinel/main.R")
source("~/git/sentinel/main.R")
gg <- ggplot(data = data1, mapping = aes(x = as.POSIXct(time), y = as.numeric(Systolic))) +
geom_point(color="blue")
plot(gg)
gg <- ggplot(data = data1, mapping = aes(x = as.POSIXct(time), y = as.numeric(Systolic))) +
geom_point(color="blue") +
xlab("Time") +
ylab("Systolic")
plot(gg)
data1[time]
data1[[time]]
data1[time]
data1[['time']]
temp <- data1[['time']] + 60*60
temp <- data1[['time']] + data1[['Day']]*24*60*60
temp <- data1[['time']] + as.numeric(data1[['Day']])*24*60*60
source("~/git/sentinel/main.R")
# Each section of the input file is accessible in the xml_string object list -
xml_string$metadata_xml
xml_string$test_detail_xml
gc()
install.packages(httr)
install.packages("httr")
install.packages("jsonlite")
install.packages("plumber")
library(plumber)
install.packages("sodium")
install.packages("plumber")
library(httr)
library(jsonlite)
res = GET("https://api.open-notify.org/astros.json")
res = GET("http://api.open-notify.org/astros.json")
res
data = fromJSON(rawToChar(res$content))
data
fromJSON(rawToChar(res$content))
fromJSON(rawToChar(res$content))
# How many people are in space right now?
response = GET("http://api.open-notify.org/astros.json")
#
response
fromJSON(rawToChar(response$content))
response = GET('https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=nation;areaName=england&structure={"date":"date","newCases":"newCasesByPublishDate"}')
fromJSON(rawToChar(response$content))
install.packages(c("broom", "generics", "pillar", "readr", "tidyr"))
library(httr)
library(jsonlite)
library(tidyverse)
##########################################
# How many people are in space right now?
# Query the API
response = GET("http://api.open-notify.org/astros.json")
response = GET("http://localhost:4176/get?msg=hi")
response = GET("http://localhost:4176/plot")
response = GET("http://localhost:4176/plot")
GET("http://localhost:4176/plot")
response = GET("http://localhost:4176/plot")
response = GET("http://localhost:4176/echo?msg=hi")
reponse
response
response$content
fromJSON(rawToChar(response$content))
source("~/git/HDS-plumber/plumber_api_calls.R")
source("~/git/HDS-plumber/plumber_api_calls.R")
# Look at the response
response
# Convert the response to R data object
fromJSON(rawToChar(response$content))
source("~/git/HDS-plumber/plumber_api_calls.R")
# Look at the response
response
# Convert the response to R data object
fromJSON(rawToChar(response$content))
# Query the API
response = GET("http://localhost:4176/echo?msg=help")
# Look at the response
response
# Convert the response to R data object
fromJSON(rawToChar(response$content))
plumber::plumb(file='git/HDS-plumber/temp/test/plumber.R')$run()
